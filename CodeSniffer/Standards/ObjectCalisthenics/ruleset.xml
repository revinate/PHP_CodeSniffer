<?xml version="1.0"?>
<ruleset name="ObjectCalisthenics">
    <description>Object Calisthenics coding standard.</description>


    <!-- Rule #3: Encapsulate all primitive types and strings -->
    <!-- Cannot be implemented, since it requires to be encapsulated ONLY if they have behavior -->

    <!-- Rule #5: Do not abbreviate -->
    <rule ref="ObjectCalisthenics.NamingConventions.VariableLength"/>
    <rule ref="ObjectCalisthenics.NamingConventions.FunctionLength"/>
    <rule ref="ObjectCalisthenics.NamingConventions.ConstantLength"/>
    <rule ref="ObjectCalisthenics.NamingConventions.ClassLength"/>

    <!-- Rule #6: Keep your classes small -->
    <!-- 15 classes per namespace -->
    <!-- Cannot be implemented, since PHPCS can only be executed over files -->
    <!-- 200 LOC for interfaces, classes and traits -->
    <rule ref="ObjectCalisthenics.Files.InterfaceLength"/>
    <rule ref="ObjectCalisthenics.Files.ClassLength"/>
    <rule ref="ObjectCalisthenics.Files.TraitLength"/>
    <!-- 10 methods per class -->
    <rule ref="ObjectCalisthenics.Metrics.MethodPerClassLimit"/>
    <!-- 20 LOC for methods -->
    <rule ref="ObjectCalisthenics.Files.FunctionLength"/>

    <!-- Rule #9: Use getters/setter -->
    <rule ref="ObjectCalisthenics.Classes.PropertyVisibility"/>

    <!-- Rule #10: Document your code -->
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <!--rule ref="Squiz.Commenting.ClassComment"/-->
    <rule ref="Squiz.Commenting.VariableComment"/>
    <rule ref="Squiz.Commenting.FunctionComment"/>
</ruleset>
